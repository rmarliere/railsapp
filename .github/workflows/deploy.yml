name: Deploy Staging Environment
on:
  push:
    branches:
      - main

env:
  RELEASE_REVISION: ${{ github.event.pull_request.head.sha }}
  AWS_REGION: "us-east-1"
  KUBE_CONFIG_DATA: ${{ secrets.KUBECONFIG }}
  KUBE_NAMESPACE: default
  ECR_REPOSITORY: railsapp
  ENVIRONMENT: staging

jobs:
  build_v1:
    name: Build Push and Deployment
    runs-on: ubuntu-latest
    steps:
      - name: ‚ùå Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}

      - name: üèó Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: üîê Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: üìã Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}

      - name: üë§ Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: üöÄ Build, tag, and push image to Amazon ECR
        id: build-push-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: railsapp
          IMAGE_TAG: ${{ steps.vars.outputs.sha_short }}
        run: |
          docker build --build-arg ENVIRONMENT=${{ env.ENVIRONMENT }} -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker compose up
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - uses: bluwy/substitute-string-action@v1
        name: üîé Find and Replace
        id: sub
        with:
          _input-file: 'manifests/deployment.yml'
          _format-key: '%%key%%'
          image: ${{ steps.login-ecr.outputs.registry }}/railsapp:${{ steps.vars.outputs.sha_short }}

      - uses: DamianReeves/write-file-action@v1.0
        name: üìì Write manifests/deployment.yml
        with:
          path: manifests/deployment.yml
          contents: ${{ steps.sub.outputs.result }}
          write-mode: overwrite

      - name: üîÑ Rollout restart
        uses: rmarliere/kubectl@1.0.0
        env:
          kube_confg_data: ${{ secrets.KUBECONFIG }}
          kube_namespace: default
          aws_access_key_id: ${{ secrets.AWS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_KEY }}
          aws_region: "us-east-1"
        with:
          args: '"kubectl apply -f manifests/deployment.yml"'
      
      - name: ‚úÖ verify deployment
        uses: rmarliere/kubectl@1.0.0
        env:
          kube_confg_data: ${{ secrets.KUBECONFIG }}
          kube_namespace: default
          aws_access_key_id: ${{ secrets.AWS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_KEY }}
          aws_region: "us-east-1"
        with:
          args: '"kubectl rollout status deployment/railsapp"'